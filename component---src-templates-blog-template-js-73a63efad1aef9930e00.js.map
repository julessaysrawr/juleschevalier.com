{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js"],"names":["SEO","props","react_default","a","createElement","Helmet","title","Template","_ref","markdownRemark","data","frontmatter","html","seo","nav","className","date","dangerouslySetInnerHTML","__html","__webpack_require__","d","__webpack_exports__","pageQuery","m","module","exports","require","default","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","gatsby__WEBPACK_IMPORTED_MODULE_1__","Nav","to"],"mappings":"uIA2EeA,MAxEf,SAAaC,GAET,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,OAAD,KACEH,EAAAC,EAAAC,cAAA,aAAQH,EAAMK,MAAd,gCCFK,SAASC,EAATC,GAEZ,IACOC,EADPD,EADDE,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAD,CAAKP,MAAOK,EAAYL,QACxBJ,EAAAC,EAAAC,cAACU,EAAA,EAAD,MACAZ,EAAAC,EAAAC,cAAA,QAAMW,UAAU,kBACdb,EAAAC,EAAAC,cAAA,WAASW,UAAU,aACjBb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cAAcJ,EAAYL,OACxCJ,EAAAC,EAAAC,cAAA,KAAGW,UAAU,aAAaJ,EAAYK,MACtCd,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVE,wBAAyB,CAAEC,OAAQN,QArB/CO,EAAAC,EAAAC,EAAA,4BAAAd,IAAAY,EAAAC,EAAAC,EAAA,8BAAAC,IA8BO,IAAMA,EAAS,wDC9BtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CJ,EAAAS,EAAAP,GAAAF,EAAAC,EAAAC,EAAA,4BAAAQ,IAAAV,EAAAC,EAAAC,EAAA,uCAAAS,IAAAX,EAAAC,EAAAC,EAAA,gCAAAU,IAAA,IAAAC,EAAAb,EAAA,GAAAc,EAAAd,EAAAe,EAAAF,GAAAG,EAAAhB,EAAA,GAAAiB,EAAAjB,EAAAe,EAAAC,GAAAE,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAAe,EAAAG,GAAAlB,EAAAC,EAAAC,EAAA,yBAAAiB,EAAAnC,IAAAgB,EAAAC,EAAAC,EAAA,+BAAAgB,EAAA,aAAAlB,EAAAC,EAAAC,EAAA,6BAAAgB,EAAA,WAAAlB,EAAAC,EAAAC,EAAA,yBAAAgB,EAAA,OAAAlB,EAAAC,EAAAC,EAAA,4BAAAgB,EAAA,UAAAlB,EAAAC,EAAAC,EAAA,+BAAAgB,EAAA,iBAAAE,EAAApB,EAAA,KAAAqB,EAAArB,EAAAe,EAAAK,GAAApB,EAAAC,EAAAC,EAAA,iCAAAmB,EAAArC,IAAA,IAAAsC,EAAAtB,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAoB,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAA9B,GAAK,OACvBgC,EAAA9B,EAAAC,cAAC0B,EAAmBc,SAApB,KACG,SAAAC,GACC,OACE5C,EAAMS,MACLmC,EAAgB5C,EAAM6C,QAAUD,EAAgB5C,EAAM6C,OAAOpC,MAEtDT,EAAM8C,QAAU9C,EAAM+C,UAC5B/C,EAAMS,KAAOT,EAAMS,KAAKA,KAAOmC,EAAgB5C,EAAM6C,OAAOpC,MAGvDuB,EAAA9B,EAAAC,cAAA,uCAaf,SAASyB,IACP,MAAM,IAAIoB,MACR,gVATJlB,EAAYmB,UAAY,CACtBxC,KAAMyC,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,wGC7BhBC,EAAmB,SAAAhD,GAAkB,IAAfiD,EAAejD,EAAfiD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOnB,IAAMtC,cAAc0D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE,8CCrBf,IAAAxB,EAAAb,EAAA,GAAAc,EAAAd,EAAAe,EAAAF,GAAAmC,EAAAhD,EAAA,KAAAA,EAAA,KAsBeiD,IAlBH,SAAAnE,GACV,OACEgC,EAAA9B,EAAAC,cAAA,WACE6B,EAAA9B,EAAAC,cAAA,UAAQW,UAAU,kCAChBkB,EAAA9B,EAAAC,cAAA,MAAIW,UAAU,cAAd,mBACAkB,EAAA9B,EAAAC,cAAA,MAAIW,UAAU,YAAd,4BAEFkB,EAAA9B,EAAAC,cAAA,OAAKW,UAAU,OACbkB,EAAA9B,EAAAC,cAAA,UACE6B,EAAA9B,EAAAC,cAAA,UAAI6B,EAAA9B,EAAAC,cAAC+D,EAAA,KAAD,CAAME,GAAG,KAAT,SACJpC,EAAA9B,EAAAC,cAAA,UAAI6B,EAAA9B,EAAAC,cAAC+D,EAAA,KAAD,CAAME,GAAG,SAAT,SACJpC,EAAA9B,EAAAC,cAAA,UAAI6B,EAAA9B,EAAAC,cAAC+D,EAAA,KAAD,CAAME,GAAG,UAAT","file":"component---src-templates-blog-template-js-73a63efad1aef9930e00.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nfunction SEO(props) {\n\n    return (\n      <div>\n        <Helmet>\n          <title>{props.title} | Jules Chevalier</title>\n          {/* <meta name=\"description\" content={props.title} /> */}\n        </Helmet>\n      </div>\n    )\n\n\n//   return (\n//     <Helmet\n//         title={props.title}\n//         meta={[\n//             { name: 'title', content: props.title },\n//             { name: 'description', content: props.description },\n//             {\n//                 property: 'og:title',\n//                 content: props.title,\n//             },\n//             {\n//                 property: 'og:url',\n//                 content: props.pathname ? props.url + props.pathname : props.url,\n//             },\n//             {\n//                 property: 'og:image',\n//                 content: props.thumbnail && props.thumbnail,\n//             },\n//             {\n//                 property: 'og:image:secure_url',\n//                 content: props.thumbnail && props.thumbnail,\n//             },\n//             {\n//                 property: 'og:description',\n//                 content: props.description,\n//             },\n//             {\n//                 property: 'og:image:width',\n//                 content: '1200',\n//             },\n//             {\n//                 property: 'og:image:height',\n//                 content: '630',\n//             },\n//             {\n//                 property: 'og:locale',\n//                 content: 'en',\n//             },\n//             { name: 'twitter:card', content: 'summary_large_image' },\n//             { name: 'twitter:title', content: props.title },\n//             {\n//                 name: 'twitter:description',\n//                 content: props.description,\n//             },\n//             {\n//                 name: 'twitter:image',\n//                 content: props.thumbnail && props.thumbnail,\n//             },\n//             { property: 'og:type', content: 'website' },\n//             { name: 'robots', content: 'index, follow' },\n//             { name: 'twitter:creator', content: '@saigowthamr' },\n//             { property: 'og:site_name', content: 'yoursitename' }\n//         ]}\n//     >\n//         <html lang=\"en\" />\n//     </Helmet>\n// )\n\n}\n\nexport default SEO;","import React from \"react\";\nimport { graphql } from 'gatsby'\nimport Nav from '../components/nav.js'\nimport SEO from '../components/seo.js'\nimport '../styles/main.scss';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {  \n  const { markdownRemark } = data; // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark; \n  return (\n    <div>\n      <SEO title={frontmatter.title} />\n      <Nav />\n      <main className=\"flex-container\">\n        <article className=\"blog-post\">\n          <h2 className=\"blog-title\">{frontmatter.title}</h2>\n          <p className=\"blog-date\">{frontmatter.date}</p>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </article>\n      </main>\n    </div>\n\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport '../styles/main.scss'\n\nconst Nav = props => {\n  return (\n    <div>\n      <header className=\"center space-above space-below\">\n        <h1 className=\"name-plate\">Jules Chevalier</h1>\n        <h3 className=\"tag-line\">Progress not perfection</h3>\n      </header>\n      <nav className=\"nav\">\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/blog\">Blog</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;"],"sourceRoot":""}