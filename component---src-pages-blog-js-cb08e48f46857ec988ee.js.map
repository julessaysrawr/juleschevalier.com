{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout-main.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["PostLink","_ref","post","react_default","a","createElement","className","gatsby_browser_entry","to","frontmatter","path","title","__webpack_require__","d","__webpack_exports__","pageQuery","BlogPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","date","map","post_link","key","id","layout_main","description","m","module","exports","require","default","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","gatsby__WEBPACK_IMPORTED_MODULE_1__","Nav","style","display","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_components_nav_js__WEBPACK_IMPORTED_MODULE_2__","LayoutMain","name","content","property","lang","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-blog-js-cb08e48f46857ec988ee.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport '../styles/main.scss'\n\nconst PostLink = ({ post }) => (\n  <div className=\"blog-list\">\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title}\n    </Link>\n  </div>\n);\n\nexport default PostLink;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport PostLink from '../components/post-link'\nimport '../styles/main.scss'\nimport LayoutMain from '../components/layout-main'\n\nconst BlogPage = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n      <LayoutMain title={'📝 Blog | Jules Chevalier'} description={'Blog for Jules Chevalier'}>\n        <main className=\"non-flex-container\">\n          {Posts}\n        </main>\n      </LayoutMain>\n  )\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport '../styles/main.scss'\n\nconst Nav = props => {\n  return (\n    <div>\n      <Link to=\"/\">\n        <header className=\"center space-above space-below\">\n          <h1 className=\"name-plate\">Jules Chevalier</h1>\n          <h3 className=\"tag-line\">Progress not perfection</h3>\n        </header>\n      </Link>\n      <div style={{display: 'flex'}}>\n        <nav className=\"nav\">\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/blog\">Blog</Link></li>\n            <li><Link to=\"/photography\">Photography</Link></li>\n            <li><Link to=\"/about\">About</Link></li>\n          </ul>\n        </nav>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Nav;","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport Nav from '../components/nav.js'\n\nconst LayoutMain = props => {\n  return (\n    <div>\n      <Helmet>\n        <title> {props.title || 'Jules Chevalier ▲ Progress Not Perfection'}</title>\n        <meta\n          name=\"description\"\n          content={ props.description || \"Jules Chevalier is an artist who creates using code, photography, writing, and design.\"}\n        />\n        {/* Facebook */}\n        <meta property=\"og:title\" content=\"Jules Chevalier ▲ Progress Not Perfection\" />\n        <meta property=\"og:site_name\" content=\"Jules Chevalier ▲ Progress Not Perfection\" />\n        <meta\n          property=\"og:description\"\n          content=\"Jules Chevalier is an artist who creates using code, photography, writing, and design.\"\n        />\n        <meta property=\"og:image\" content=\"https://juleschevalier.com/thumbnail.jpg\" />\n        <meta property=\"og:url\" content=\"https://juleschevalier.com/\" />\n        {/* Twitter */}\n        <meta name=\"twitter:title\" content=\"Jules Chevalier ▲ Progress Not Perfection\" />\n        <meta\n          name=\"twitter:description\"\n          content=\"Jules Chevalier is an artist who creates using code, photography, writing, and design.\"\n        />\n        <meta name=\"twitter:image\" content=\"https://juleschevalier.com/thumbnail.jpg\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <html lang=\"en\" />\n      </Helmet>\n      <Nav />\n      {props.children}\n    </div>\n  )\n}\n\nexport default LayoutMain\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}