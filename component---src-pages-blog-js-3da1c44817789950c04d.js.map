{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout-main.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["PostLink","_ref","post","react_default","a","createElement","className","gatsby_browser_entry","to","frontmatter","path","title","__webpack_require__","d","__webpack_exports__","pageQuery","BlogPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","date","map","post_link","key","id","layout_main","description","m","module","exports","require","default","r","graphql","StaticQueryContext","StaticQuery","useStaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_1__","Nav","style","display","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_components_nav_js__WEBPACK_IMPORTED_MODULE_2__","LayoutMain","name","content","property","lang","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-blog-js-3da1c44817789950c04d.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport '../styles/main.scss'\n\nconst PostLink = ({ post }) => (\n  <div className=\"blog-list\">\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title}\n    </Link>\n  </div>\n);\n\nexport default PostLink;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport PostLink from '../components/post-link'\nimport '../styles/main.scss'\nimport LayoutMain from '../components/layout-main'\n\nconst BlogPage = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n      <LayoutMain title={'📝 Blog | Jules Chevalier'} description={'Blog for Jules Chevalier'}>\n        <main className=\"non-flex-container\">\n          {Posts}\n        </main>\n      </LayoutMain>\n  )\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport '../styles/main.scss'\n\nconst Nav = props => {\n  return (\n    <div>\n      <Link to=\"/\">\n        <header className=\"center space-above space-below\">\n          <h1 className=\"name-plate\">Jules Chevalier</h1>\n          <h3 className=\"tag-line\">Progress not perfection</h3>\n        </header>\n      </Link>\n      <div style={{display: 'flex'}}>\n        <nav className=\"nav\">\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/blog\">Blog</Link></li>\n            <li><Link to=\"/photography\">Photography</Link></li>\n            <li><Link to=\"/about\">About</Link></li>\n          </ul>\n        </nav>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Nav;","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport Nav from '../components/nav.js'\n\nconst LayoutMain = props => {\n  return (\n    <div>\n      <Helmet>\n        <title> {props.title || 'Jules Chevalier ▲ Progress Not Perfection'}</title>\n        <meta\n          name=\"description\"\n          content={ props.description || \"Jules Chevalier is an artist who creates using code, photography, writing, and design.\"}\n        />\n        {/* Facebook */}\n        <meta property=\"og:title\" content=\"Jules Chevalier ▲ Progress Not Perfection\" />\n        <meta property=\"og:site_name\" content=\"Jules Chevalier ▲ Progress Not Perfection\" />\n        <meta\n          property=\"og:description\"\n          content=\"Jules Chevalier is an artist who creates using code, photography, writing, and design.\"\n        />\n        <meta property=\"og:image\" content=\"https://juleschevalier.com/thumbnail.jpg\" />\n        <meta property=\"og:url\" content=\"https://juleschevalier.com/\" />\n        {/* Twitter */}\n        <meta name=\"twitter:title\" content=\"Jules Chevalier ▲ Progress Not Perfection\" />\n        <meta\n          name=\"twitter:description\"\n          content=\"Jules Chevalier is an artist who creates using code, photography, writing, and design.\"\n        />\n        <meta name=\"twitter:image\" content=\"https://juleschevalier.com/thumbnail.jpg\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <html lang=\"en\" />\n      </Helmet>\n      <Nav />\n      {props.children}\n    </div>\n  )\n}\n\nexport default LayoutMain\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}