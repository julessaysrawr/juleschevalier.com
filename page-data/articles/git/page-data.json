{"componentChunkName":"component---src-templates-article-template-js","path":"/articles/git","result":{"data":{"markdownRemark":{"html":"<p>Here are a few helpful tricks that I enjoy while using git.  You can read more about the <a href=\"https://rogerdudler.github.io/git-guide/\">basics</a> if you haven't used git before.</p>\n<h2>What changes have I added?</h2>\n<p>You probably know about <code>git diff</code> which lets you look at unstaged changes, but did you know that you can look at your staged changes as well?  ðŸ™Œ Game changer!</p>\n<pre><code>git diff --staged\n</code></pre>\n<h2>There are different ways to view the log output</h2>\n<pre><code>git log --oneline\n\ngit log --pretty=format:\"%h - %an, %ar : %s\"\n\ngit log --pretty=format:\"Commit Hash: %H, Author: %aN, Date: %aD\"\n</code></pre>\n<h2>Delete multiple branches at the same time</h2>\n<pre><code>git branch -d feature other-feature bug-fix moar-fixes\n</code></pre>\n<h2>Rebase over merge</h2>\n<p><em>Be careful with this</em> - it will overwrite history.  I only use this on a branch where I am the only one adding commits.</p>\n<pre><code>git pull origin main --rebase  \n\ngit push -f origin feature-branch\n</code></pre>\n<p><em>2020 update: I now use main for the default branch.  You can do that yourself by following <a href=\"/articles/renaming-master-branch\">these three steps</a></em>.</p>\n<p>If you want to read more about rebasing and reasons to use it over merge, this is a great <a href=\"https://dev.to/maxwell_dev/the-git-rebase-introduction-i-wish-id-had\">explanation</a>.</p>","frontmatter":{"date":"February 4th, 2020","path":"/articles/git","title":"Git Favorites","topic":"Technology"}}},"pageContext":{}}}