{"componentChunkName":"component---src-templates-article-template-js","path":"/git","result":{"data":{"markdownRemark":{"html":"<p>Here are a few helpful tricks that I enjoy while using git.  You can read more about the <a href=\"https://rogerdudler.github.io/git-guide/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">basics</a> if you haven't used git before.</p>\n<h2 id=\"what-changes-have-i-added\" style=\"position:relative;\">What changes have I added?<a href=\"#what-changes-have-i-added\" aria-label=\"what changes have i added permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>You probably know about <code>git diff</code> which lets you look at unstaged changes, but did you know that you can look at your staged changes as well?  ðŸ™Œ Game changer!</p>\n<pre><code>git diff --staged\n</code></pre>\n<h2 id=\"there-are-different-ways-to-view-the-log-output\" style=\"position:relative;\">There are different ways to view the log output<a href=\"#there-are-different-ways-to-view-the-log-output\" aria-label=\"there are different ways to view the log output permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code>git log --oneline\n\ngit log --pretty=format:\"%h - %an, %ar : %s\"\n\ngit log --pretty=format:\"Commit Hash: %H, Author: %aN, Date: %aD\"\n</code></pre>\n<h2 id=\"delete-multiple-branches-at-the-same-time\" style=\"position:relative;\">Delete multiple branches at the same time<a href=\"#delete-multiple-branches-at-the-same-time\" aria-label=\"delete multiple branches at the same time permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<pre><code>git branch -d feature other-feature bug-fix moar-fixes\n</code></pre>\n<h2 id=\"rebase-over-merge\" style=\"position:relative;\">Rebase over merge<a href=\"#rebase-over-merge\" aria-label=\"rebase over merge permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><em>Be careful with this</em> - it will overwrite history.  I only use this on a branch where I am the only one adding commits.</p>\n<pre><code>git pull origin main --rebase  \n\ngit push -f origin feature-branch\n</code></pre>\n<p><em>2020 update: I now use main for the default branch.  You can do that yourself by following <a href=\"/renaming-master-branch\">these three steps</a></em>.</p>\n<p>If you want to read more about rebasing and reasons to use it over merge, this is a great <a href=\"https://dev.to/maxwell_dev/the-git-rebase-introduction-i-wish-id-had\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">explanation</a>.</p>","frontmatter":{"date":"February 4th, 2020","path":"/git","title":"Git Favorites","topic":"Technology","featuredImage":null}}},"pageContext":{}}}