{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js"],"names":["PostLink","_ref","post","react_default","a","createElement","className","gatsby_browser_entry","to","frontmatter","path","title","__webpack_exports__","Posts","data","allMarkdownRemark","edges","filter","edge","node","date","map","post_link","key","id","Helmet","name","content","nav","pageQuery","m","module","exports","require","default","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","gatsby__WEBPACK_IMPORTED_MODULE_1__","Nav"],"mappings":"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","file":"component---src-pages-blog-js-5099c51f293efb756bcd.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport '../styles/main.scss'\n\nconst PostLink = ({ post }) => (\n  <div className=\"blog-list\">\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title}\n    </Link>\n  </div>\n);\n\nexport default PostLink;","import React from \"react\";\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport PostLink from \"../components/post-link\";\nimport Nav from '../components/nav.js';\nimport '../styles/main.scss';\n\nconst BlogPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Blog | Jules Chevalier</title>\n        <meta name=\"description\" content=\"Blog for Jules Chevalier\" />\n      </Helmet>\n      <Nav />\n      <main className=\"non-flex-container\">\n        {Posts}\n      </main>\n    </div>\n  );\n};\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport '../styles/main.scss'\n\nconst Nav = props => {\n  return (\n    <div>\n      <header className=\"center space-above space-below\">\n        <h1 className=\"name-plate\">Jules Chevalier</h1>\n        <h3 className=\"tag-line\">Progress not perfection</h3>\n      </header>\n      <nav className=\"nav\">\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/blog\">Blog</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;"],"sourceRoot":""}